{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/mattortiz.com - logo.png","webpack:///./src/components/header.js","webpack:///./src/components/archive.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","HeaderWrapper","styled","div","withConfig","displayName","componentId","Header","siteTitle","react_default","gatsby_browser_entry","style","color","textDecoration","width","src","siteLogo","alt","defaultProps","ArchiveList","ul","Archive","allMarkdownRemark","Fragment","edges","map","edge","key","node","frontmatter","slug","_3352683756","MainLayout","main","Layout","Helmet_default","site","siteMetadata","meta","name","content","description","keywords","lang","header","web","from","height","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_1925268299","SEO","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-page-2-js-91fcf1c8bdbdf36cb3ee.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/mattortiz.com - logo-69adf011f81719fb5240d2fdcd14b141.png\";","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport siteLogo from '../images/mattortiz.com - logo.png'\n\nconst HeaderWrapper = styled.div`\n  background: #242a33;\n  // margin: 0 auto;\n  padding: 0.5rem;\n  // max-width: 960px;\n  img {\n    margin-bottom: 0;\n  }\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <Link\n      to=\"/\"\n      style={{\n        color: 'white',\n        textDecoration: 'none',\n      }}\n    >\n      <img\n        style={{\n          width: '80px',\n        }}\n        src={siteLogo}\n        alt=\"Matt Ortiz Logo\"\n      />\n    </Link>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\nimport { StaticQuery, graphql, Link } from 'gatsby'\n\nconst POST_ARCHIVE_QUERY = graphql`\n  query BlogPostArchive {\n    allMarkdownRemark(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ArchiveList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n      Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    font-size: 0.8rem;\n    text-decoration: underline;\n    color: #524763;\n  }\n`\n\nconst Archive = () => (\n  <StaticQuery\n    query={POST_ARCHIVE_QUERY}\n    render={({ allMarkdownRemark }) => (\n      <>\n        <aside>\n          <h3>Archive</h3>\n          <ArchiveList>\n            {allMarkdownRemark.edges.map(edge => (\n              <li key={edge.node.frontmatter.slug}>\n                <Link to={`/posts${edge.node.frontmatter.slug}`}>\n                  {edge.node.frontmatter.title}\n                </Link>\n              </li>\n            ))}\n          </ArchiveList>\n        </aside>\n      </>\n    )}\n  />\n)\n\nexport default Archive\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\nimport { Spring } from 'react-spring'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Archive from './archive'\nimport './layout.css'\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 1rem auto;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 40px;\n`\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n          }\n        }\n        file(relativePath: { regex: \"/bg/\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: data.site.siteMetadata.description,\n            },\n            {\n              name: 'keywords',\n              content: data.site.siteMetadata.keywords,\n            },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Spring\n          from={{ height: location.pathname === '/' ? 100 : 200 }}\n          to={{ height: location.pathname === '/' ? 200 : 100 }}\n        >\n          {styles => (\n            <div style={{ overflow: 'hidden', ...styles }}>\n              <Img fluid={data.file.childImageSharp.fluid} />\n            </div>\n          )}\n        </Spring>\n        <MainLayout>\n          <div>{children}</div>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}